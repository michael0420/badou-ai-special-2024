  import cv2
import numpy as np
import copy
import matplotlib.pyplot as plt
#灰度图
def gray(img):
    h,w=img.shape[:2]
    grayimg=np.zeros([h,w],dtype=np.uint8)
    for i in range(h):
        for j in range(w):
            mid=img[i,j]
            grayimg[i,j]=int(mid[0] * 0.11 + mid[1] * 0.59 + mid[2] * 0.3)
    return grayimg

#直方图均衡化
def equalization(img):
    h,w=img.shape[:2]
    equal_img=copy.deepcopy(img)                                #深拷贝原图像
    hist=[0]*256
    # 计算原始图的直方图
    for i in range(h):
        for j in range(w):
            hist[img[i,j]]+=1;
    #开始均衡化
    for i in range(len(hist)):
        hist[i]/=(h*w)
    for i in range(1,len(hist)):
        hist[i]+=hist[i-1]
    for i in range(len(hist)):
        hist[i]=int(hist[i]*256-1)
    #存入
    for i in range(h):
        for j in range(w):
            equal_img[i,j]=hist[equal_img[i,j]]
    return equal_img




if __name__=='__main__':
    img=cv2.imread("lenna.png")

    #灰度直方图均衡化
    gray_img=gray(img)
    equal_gray_img=equalization(gray_img)
    cv2.imshow("qual",np.hstack((gray_img,equal_gray_img)))     #np.hstack()按列顺序把数组给堆叠起来
    cv2.waitKey(0)

    #颜色直方图的均衡化
    red_img=equalization(img[:,:,2])
    green_img=equalization(img[:,:,1])
    blue_img=equalization(img[:,:,0])
    array1=red_img[:,:,None]     #升维
    array2=green_img[:,:,None]
    array3=blue_img[:,:,None]
    cv2.imshow("color",np.hstack([img,np.concatenate((array3,array2,array1),axis=2)]))
    cv2.waitKey(0)

    #简洁版
    img = cv2.imread("lenna.png", 1)
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    dst = cv2.equalizeHist(gray)                                  #直方图均衡化
    hist1 = cv2.calcHist([gray], [0], None, [256], [0, 255])      #计算直方图,0是图像通道，256是柱子数量，[0, 255]像素值范围
    hist2 = cv2.calcHist([dst], [0], None, [256], [0, 255])
    #plt.plot(hist1)                                              #折线图
    plt.figure(figsize=(10,5))
    plt.subplot(1,2,1)
    plt.hist(gray.ravel(),256)                                    #plt.hist()绘制直方图，256是柱子的数量，ravel()拉成一维数组
    plt.subplot(1,2,2)
    plt.hist(dst.ravel(),256)
    plt.show()

    (b, g, r) = cv2.split(img)                                    #分解三通道
    bH = cv2.equalizeHist(b)
    gH = cv2.equalizeHist(g)
    rH = cv2.equalizeHist(r)
    result = cv2.merge((bH, gH, rH))                              #合并三通道
    cv2.imshow("dst_rgb", np.hstack((img,result)))
    cv2.waitKey(0)
